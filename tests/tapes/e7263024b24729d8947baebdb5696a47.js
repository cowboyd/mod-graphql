var path = require("path");

/**
 * GET /instance-storage/instances
 *
 * accept: application/json
 * content-type: application/json
 * x-okapi-tenant: diku
 * x-okapi-token: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkaWt1X2FkbWluIiwidXNlcl9pZCI6IjEzODUxYzU3LThhNmMtNWQ0My05ZWYyLTg4MDgyOGExZWQ3NCIsInRlbmFudCI6ImRpa3UifQ.ScbcT5-Ho5ubdflM_d-CXgocSSSce--9Z0DY3l_o3lrkjgxCS0ljAAJ-gXsUMpG248fNZrib-AHssw0xsSKqoQ
 * accept-encoding: gzip,deflate
 * user-agent: node-fetch/1.0 (+https://github.com/bitinn/node-fetch)
 * connection: close
 * host: localhost:9130
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("x-okapi-trace", "GET mod-authtoken-1.4.1-SNAPSHOT.21 http://10.0.2.15:9131/instance-storage/instances : 202 1319us, GET mod-inventory-storage-11.0.0-SNAPSHOT.114 http://10.0.2.15:9139/instance-storage/instances : 200 4899us");
  res.setHeader("content-type", "application/json");
  res.setHeader("accept", "application/json");
  res.setHeader("x-okapi-tenant", "diku");
  res.setHeader("accept-encoding", "gzip,deflate");
  res.setHeader("user-agent", "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)");
  res.setHeader("host", "localhost:9130");
  res.setHeader("x-okapi-request-id", "981105/instance-storage");
  res.setHeader("x-okapi-url", "http://10.0.2.15:9130");
  res.setHeader("x-okapi-permissions", "[\"inventory-storage.instances.collection.get\"]");
  res.setHeader("x-okapi-user-id", "13851c57-8a6c-5d43-9ef2-880828a1ed74");
  res.setHeader("x-okapi-token", "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkaWt1X2FkbWluIiwidXNlcl9pZCI6IjEzODUxYzU3LThhNmMtNWQ0My05ZWYyLTg4MDgyOGExZWQ3NCIsInRlbmFudCI6ImRpa3UifQ.ScbcT5-Ho5ubdflM_d-CXgocSSSce--9Z0DY3l_o3lrkjgxCS0ljAAJ-gXsUMpG248fNZrib-AHssw0xsSKqoQ");
  res.setHeader("connection", "close");
  res.setHeader("transfer-encoding", "chunked");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("", "base64"));
  res.write(new Buffer("dGl0bGUiIDogIlRyYW5zcGFyZW50IHdhdGVyIiwKICAgICJhbHRlcm5hdGl2ZVRpdGxlcyIgOiBbIF0sCiAgICAic2VyaWVzIiA6IFsgXSwKICAgICJpZGVudGlmaWVycyIgOiBbIHsKICAgICAgInZhbHVlIiA6ICJvY245Njg3Nzc4NDYiLAogICAgICAiaWRlbnRpZmllclR5cGVJZCIgOiAiNWQxNjRmNGItMGIxNS00ZTQyLWFlNzUtY2ZjZjg1MzE4YWQ5IgogICAgfSwgewogICAgICAidmFsdWUiIDogIjk3ODYzMTY4MDAzMTIiLAogICAgICAiaWRlbnRpZmllclR5cGVJZCIgOiAiODI2MTA1NGYtYmU3OC00MjJkLWJkNTEtNGVkOWYzM2MzNDIyIgogICAgfSwgewogICAgICAidmFsdWUiIDogIjYzMTY4MDAzMTIiLAogICAgICAiaWRlbnRpZmllclR5cGVJZCIgOiAiODI2MTA1NGYtYmU3OC00MjJkLWJkNTEtNGVkOWYzM2MzNDIyIgogICAgfSwgewogICAgICAidmFsdWUiIDogIk9UQS0xMDMxIE90w6EgUmVjb3JkcyIsCiAgICAgICJpZGVudGlmaWVyVHlwZUlkIiA6ICJiNWQ4Y2RjNC05NDQxLTQ4N2MtOTBjZi0wYzdlYzk3NzI4ZWIiCiAgICB9LCB7CiAgICAgICJ2YWx1ZSIgOiAiKE9Db0xDKTk2ODc3Nzg0NiIsCiAgICAgICJpZGVudGlmaWVyVHlwZUlkIiA6ICI3ZTU5MTE5Ny1mMzM1LTRhZmItYmM2ZC1hNmQ3NmNhM2JhY2UiCiAgICB9IF0sCiAgICAiY29udHJpYnV0b3JzIiA6IFsgewogICAgICAibmFtZSIgOiAiU29zYSwgT21hciIsCiAgICAgICJjb250cmlidXRvclR5cGVJZCIgOiAiMmI5NGM2MzEtZmNhOS00ODkyLWE3MzAtMDNlZTUyOWZmZTJiIiwKICAgICAgImNvbnRyaWJ1dG9yTmFtZVR5cGVJZCIgOiAiMmI5NGM2MzEtZmNhOS00ODkyLWE3MzAtMDNlZTUyOWZmZTJhIiwKICAgICAgInByaW1hcnkiIDogdHJ1ZQogICAgfSwgewogICAgICAibmFtZSIgOiAiS2VpdGEsIFNlY2tvdSwgMTk3Ny0iLAogICAgICAiY29udHJpYnV0b3JUeXBlSWQiIDogIjJiOTRjNjMxLWZjYTktNDg5Mi1hNzMwLTAzZWU1MjlmZmUyYiIsCiAgICAgICJjb250cmlidXRvck5hbWVUeXBlSWQiIDogIjJiOTRjNjMxLWZjYTktNDg5Mi1hNzMwLTAzZWU1MjlmZmUyYSIsCiAgICAgICJwcmltYXJ5IiA6IGZhbHNlCiAgICB9IF0sCiAgICAic3ViamVjdHMiIDogWyAiV29ybGQgbXVzaWMuIiwgIkphenoiIF0sCiAgICAiY2xhc3NpZmljYXRpb25zIiA6IFsgewogICAgICAiY2xhc3NpZmljYXRpb25OdW1iZXIiIDogIk0xMzY2LlM2NyIsCiAgICAgICJjbGFzc2lmaWNhdGlvblR5cGVJZCIgOiAiY2UxNzZhY2UtYTUzZS00YjRkLWFhODktNzI1ZWQ3YjJlZGFjIgogICAgfSBdLAogICAgInB1YmxpY2F0aW9uIiA6IFsgewogICAgICAicHVibGlzaGVyIiA6ICJPdMOhIFJlY29yZHMsICIsCiAgICAgICJwbGFjZSIgOiAiW1BsYWNlIG9mIHB1YmxpY2F0aW9uIG5vdCBpZGVudGlmaWVkXTogIiwKICAgICAgImRhdGVPZlB1YmxpY2F0aW9uIiA6ICJbMjAxN10iCiAgICB9IF0sCiAgICAidXJscyIgOiBbIF0sCiAgICAiaW5zdGFuY2VUeXBlSWQiIDogIjJlNDhlNzEzLTE3ZjMtNGMxMy1hOWY4LTIzODQ1YmIyMTBhYyIsCiAgICAiaW5zdGFuY2VGb3JtYXRJZCIgOiAiMzA5YzNhM2QtZDU0Yy00NTE5LWI5NzgtMmM1YzJkZTc4ZDk1IiwKICAgICJwaHlzaWNhbERlc2NyaXB0aW9ucyIgOiBbICIxIGF1ZGlvIGRpc2M6IGRpZ2l0YWw7IDQgMy80IGluLiIgXSwKICAgICJsYW5ndWFnZXMiIDogWyAidW5kIiBdLAogICAgIm5vdGVzIiA6IFsgIlRpdGxlIGZyb20gZGlzYyBsYWJlbC4iLCAiQWxsIGNvbXBvc2l0aW9ucyB3cml0dGVuIGJ5IE9tYXIgU29zYSBhbmQgU2Vja291IEtlaXRhLCBleGNlcHQgdHJhY2tzIDYsIDggYW5kIDEwIHdyaXR0ZW4gYnkgT21hciBTb3NhLiIsICJQcm9kdWNlZCBieSBTdGV2ZSBBcmfDvGVsbGVzIGFuZCBPbWFyIFNvc2EuIiwgIk9tYXIgU29zYSwgZ3JhbmQgcGlhbm8sIEZlbmRlciBSaG9kZXMsIHNhbXBsZXIsIG1pY3JvS29yZywgdm9jYWxzIDsgU2Vja291IEtlaXRhLCBrb3JhLCB0YWxraW5nIGRydW0sIGRqZW1iZSwgc2FiYXIsIHZvY2FscyA7IFd1IFRvbmcsIHNoZW5nLCBiYXd1IDsgTWlla28gTWl5YXpha2ksIGtvdG8gOyBHdXN0YXZvIE92YWxsZXMsIGJhdGEgZHJ1bXMsIGN1bG8nZSBwdXlhLCBtYXJhY2FzLCBndWF0YWNhLCBjYWxhYmF6YSwgY2xhdmUgOyBFJ0pvdW5nLUp1LCBnZW9qdW5nbyA7IE1vc2luIEtoYW4gS2F3YSwgbmFnYWRpIDsgRG9taW5pcXVlIEh1Y2hldCwgYmlyZCBlZmZlY3RzLiIgXSwKICAgICJtZXRhZGF0YSIgOiB7CiAgICAgICJjcmVhdGVkRGF0ZSIgOiAiMjAxOC0wNS0wM1QwMjozOTo1MS4xMDQrMDAwMCIsCiAgICAgICJjcmVhdGVkQnlVc2VySWQiIDogIjEzODUxYzU3LThhNmMtNWQ0My05ZWYyLTg4MDgyOGExZWQ3NCIsCiAgICAgICJ1cGRhdGVkRGF0ZSIgOiAiMjAxOC0wNS0wM1QwMjozOTo1MS4xMDQrMDAwMCIsCiAgICAgICJ1cGRhdGVkQnlVc2VySWQiIDogIjEzODUxYzU3LThhNmMtNWQ0My05ZWYyLTg4MDgyOGExZWQ3NCIKICAgIH0KICB9LCB7CiAgICAiaWQiIDogImYzMWEzNmRlLWZjZjgtNDRmOS04N2VmLWE1NWQwNmFkMjFhZSIsCiAgICAic291cmNlIiA6ICJTYW1wbGUiLAogICAgInRpdGxlIiA6ICJUaGUgR2lybCBvbiB0aGUgVHJhaW4iLAogICAgImFsdGVybmF0aXZlVGl0bGVzIiA6IFsgIkZpcnN0IGFsdGVybmF0aXZlIHRpdGxlIiwgIlNlY29uZCBhbHRlcm5hdGl2ZSB0aXRsZSIgXSwKICAgICJzZXJpZXMiIDogWyBdLAogICAgImlkZW50aWZpZXJzIiA6IFsgewogICAgICAidmFsdWUiIDogIkIwMUxPN1BKT0UiLAogICAgICAiaWRlbnRpZmllclR5cGVJZCIgOiAiN2Y5MDc1MTUtYTFiZi00NTEzLThhMzgtOTJlMWEwN2M1MzlkIgogICAgfSBdLAogICAgImNvbnRyaWJ1dG9ycyIgOiBbIHsKICAgICAgIm5hbWUiIDogIkNyZWF0b3IgQSIsCiAgICAgICJjb250cmlidXRvck5hbWVUeXBlSWQiIDogIjJlNDhlNzEzLTE3ZjMtNGMxMy1hOWY4LTIzODQ1YmIyMTBhYSIsCiAgICAgICJwcmltYXJ5IiA6IHRydWUKICAgIH0sIHsKICAgICAgIm5hbWUiIDogIkNyZWF0b3IgQiIsCiAgICAgICJjb250cmlidXRvck5hbWVUeXBlSWQiIDogImU4YjMxMWE2LTNiMjEtNDNmMi1hMjY5LWRkOTMxMGNiMmQwYSIsCiAgICAgICJwcmltYXJ5IiA6IGZhbHNlCiAgICB9IF0sCiAgICAic3ViamVjdHMiIDogWyBdLAogICAgImNsYXNzaWZpY2F0aW9ucyIgOiBbIF0sCiAgICAicHVibGljYXRpb24iIDogWyBdLAogICAgInVybHMiIDogWyBdLAogICAgImluc3RhbmNlVHlwZUlkIiA6ICIyYjk0YzYzMS1mY2E5LTQ4OTItYTczMC0wM2VlNTI5ZmZlMmMiLAogICAgInBoeXNpY2FsRGVzY3JpcHRpb25zIiA6IFsgXSwKICAgICJsYW5ndWFnZXMiIDogWyBdLAogICAgIm5vdGVzIiA6IFsgXSwKICAgICJtZXRhZGF0YSIgOiB7CiAgICAgICJjcmVhdGVkRGF0ZSIgOiAiMjAxOC0wNS0wM1QwMjozOTo1MS44NzYrMDAwMCIsCiAgICAgICJjcmVhdGVkQnlVc2VySWQiIDogIjEzODUxYzU3LThhNmMtNWQ0My05ZWYyLTg4MDgyOGExZWQ3NCIsCiAgICAgICJ1cGRhdGVkRGF0ZSIgOiAiMjAxOC0wNS0wM1QwMjozOTo1MS44NzYrMDAwMCIsCiAgICAgICJ1cGRhdGVkQnlVc2VySWQiIDogIjEzODUxYzU3LThhNmMtNWQ0My05ZWYyLTg4MDgyOGExZWQ3NCIKICAgIH0KICB9LCB7CiAgICAiaWQiIDogImE4OWVjY2YwLTU3YTYtNDk1ZS04OThkLTMyYjliMjIxMGYyZiIsCiAgICAic291cmNlIiA6ICJTYW1wbGUiLAogICAgInRpdGxlIiA6ICJJbnRlcmVzdGluZyBUaW1lcyIsCiAgICAiYWx0ZXJuYXRpdmVUaXRsZXMiIDogWyBdLAogICAgInNlcmllcyIgOiBbIF0sCiAgICAiaWRlbnRpZmllcnMiIDogWyB7CiAgICAgICJ2YWx1ZSIgOiAiMDU1MjE0MjM1MiIsCiAgICAgICJpZGVudGlmaWVyVHlwZUlkIiA6ICI4MjYxMDU0Zi1iZTc4LTQyMmQtYmQ1MS00ZWQ5ZjMzYzM0MjIiCiAgICB9LCB7CiAgICAgICJ2YWx1ZSIgOiAiOTc4MDU1MjE0MjM1MiIsCiAgICAgICJpZGVudGlmaWVyVHlwZUlkIiA6ICI4MjYxMDU0Zi1iZTc4LTQyMmQtYmQ1MS00ZWQ5ZjMzYzM0MjIiCiAgICB9IF0sCiAgICAiY29udHJpYnV0b3JzIiA6IFsgewogICAgICAibmFtZSIgOiAiUHJhdGNoZXR0LCBUZXJyeSIsCiAgICAgICJjb250cmlidXRvck5hbWVUeXBlSWQiIDogIjJiOTRjNjMxLWZjYTktNDg5Mi1hNzMwLTAzZWU1MjlmZmUyYSIsCiAgICAgICJwcmltYXJ5IiA6IHRydWUKICAgIH0gXSwKICAgICJzdWJqZWN0cyIgOiBbIF0sCiAgICAiY2xhc3NpZmljYXRpb25zIiA6IFsgXSwKICAgICJwdWJsaWNhdGlvbiIgOiBbIF0sCiAgICAidXJscyIgOiBbIF0sCiAgICAiaW5zdGFuY2VUeXBlSWQiIDogIjJiOTRjNjMxLWZjYTktNDg5Mi1hNzMwLTAzZWU1MjlmZmUyYyIsCiAgICAicGh5c2ljYWxEZXNjcmlwdGlvbnMiIDogWyBdLAogICAgImxhbmd1YWdlcyIgOiBbIF0sCiAgICAibm90ZXMiIDogWyBdLAogICAgIm1ldGFkYXRhIiA6IHsKICAgICAgImNyZWF0ZWREYXRlIiA6ICIyMDE4LTA1LTAzVDAyOjM5OjUyLjY4MiswMDAwIiwKICAgICAgImNyZWF0ZWRCeVVzZXJJZCIgOiAiMTM4NTFjNTctOGE2Yy01ZDQzLTllZjItODgwODI4YTFlZDc0IiwKICAgICAgInVwZGF0ZWREYXRlIiA6ICIyMDE4LTA1LTAzVDAyOjM5OjUyLjY4MiswMDAwIiwKICAgICAgInVwZGF0ZWRCeVVzZXJJZCIgOiAiMTM4NTFjNTctOGE2Yy01ZDQzLTllZjItODgwODI4YTFlZDc0IgogICAgfQogIH0sIHsKICAgICJpZCIgOiAiMTgwZjRlMWUtOTc4ZS00Yjc3LTlkM2QtMDVhZjlkN2VmODc2IiwKICAgICJzb3VyY2UiIDogIkxvY2FsOiBNT0RTIiwKICAgICJ0aXRsZSIgOiAiQ2FsaWZvcm5pYTogaXRzIGdvbGQgYW5kIGl0cyBpbmhhYml0YW50cywgYnkgdGhlIGF1dGhvciBvZiAnU2V2ZW4geWVhcnMgb24gdGhlIFNsYXZlIGNvYXN0IG9mIEFmcmljYScuIiwKICAgICJhbHRlcm5hdGl2ZVRpdGxlcyIgOiBbIF0sCiAgICAic2VyaWVzIiA6IFsgXSwKICAgICJpZGVudGlmaWVycyIgOiBbIHsKICAgICAgInZhbHVlIiA6ICI2OTIyODg4MiIsCiAgICAgICJpZGVudGlmaWVyVHlwZUlkIiA6ICI4MjYxMDU0Zi1iZTc4LTQyMmQtYmQ1MS00ZWQ5ZjMzYzM0MjIiCiAgICB9IF0sCiAgICAiY29udHJpYnV0b3JzIiA6IFsgewogICAgICAibmFtZSIgOiAiSHVudGxleSwgSGVucnkgVmVlbCIsCiAgICAgICJjb250cmlidXRvclR5cGVJZCIgOiAiIiwKICAgICAgImNvbnRyaWJ1dG9yVHlwZVRleHQiIDogIiIsCiAgICAgICJjb250cmlidXRvck5hbWVUeXBlSWQiIDogIjJiOTRjNjMxLWZjYTktNDg5Mi1hNzMwLTAzZWU1MjlmZmUyYSIKICAgIH0gXSwKICAgICJzdWJqZWN0cyIgOiBbIF0sCiAgICAiY2xhc3NpZmljYXRpb25zIiA6IFsgXSwKICAgICJwdWJsaWNhdGlvbiIgOiBbIF0sCiAgICAidXJscyIgOiBbIF0sCiAgICAiaW5zdGFuY2VUeXBlSWQiIDogIjJiOTRjNjMxLWZjYTktNDg5Mi1hNzMwLTAzZWU1MjlmZmUyYyIsCiAgICAicGh5c2ljYWxEZXNjcmlwdGlvbnMiIDogWyBdLAogICAgImxhbmd1YWdlcyIgOiBbIF0sCiAgICAibm90ZXMiIDogWyBdLAogICAgIm1ldGFkYXRhIiA6IHsKICAgICAgImNyZWF0ZWREYXRlIiA6ICIyMDE4LTA1LTAzVDAyOjQwOjEyLjg4NyswMDAwIiwKICAgICAgImNyZWF0ZWRCeVVzZXJJZCIgOiAiMTM4NTFjNTctOGE2Yy01ZDQzLTllZjItODgwODI4YTFlZDc0IiwKICAgICAgInVwZGF0ZWREYXRlIiA6ICIyMDE4LTA1LTAzVDAyOjQwOjEyLjg4NyswMDAwIiwKICAgICAgInVwZGF0ZWRCeVVzZXJJZCIgOiAiMTM4NTFjNTctOGE2Yy01ZDQzLTllZjItODgwODI4YTFlZDc0IgogICAgfQogIH0gXSwKICAidG90YWxSZWNvcmRzIiA6IDExOAp9", "base64"));
  res.end();

  return __filename;
};
