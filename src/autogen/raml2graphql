// Run as `node ./raml2graphql [-v] inputs/inventory.raml`

const argv0 = process.argv[1].replace(/.*\//, '');
let verbose = false;
if (process.argv[2] == '-v') {
  verbose = true;
  process.argv.shift();
}
const file = process.argv[2];
if (!file) {
  console.error(`Usage: ${argv0}: SOMEFILE.raml`);
  process.exit(1);
}

// Ideally, we want a library that reads the RAML and knows how to
// include the information from the references JSON Schemas. But if we
// can't find such a thing, it would suffice to parse it as YAML and
// walk the tree ourselves to discover the schemas.

const raml = require('raml-1-parser');
let api;
try {
  api = raml.parseSync(file);
} catch(e) {
  console.error(`${argv0}: RAML parse failed:`, e);
  process.exit(2);
}

if (verbose) {
  console.log(`api is a ${api.constructor.name}`); // ASTNodeImpl
  console.log(JSON.stringify(api.toJSON(), null, 2));
}

emitComment(api, 'title')
emitComment(api, 'version')
emitComment(api, 'protocols')
emitComment(api, 'baseUri')

var apiResources = api.elementsOfKind("resources");
apiResources.forEach((resource) => {
  console.log(`${resource}:`, resource);
});


function emitComment(api, tag) {
  var attr = api.attr(tag);
  var value = attr.plainValue();
  console.log(`# ${tag}: ${value} (${typeof value})`);
}
