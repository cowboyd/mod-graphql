#!/usr/bin/env node

/* eslint-disable no-console */
// Run as: ./raml2graphql [-v] ../../../mod-inventory-storage/ramls/instance-storage.raml
// For the time being, you will need mod-inventory-storage to be on the "graphql" branch.

const raml = require('raml-1-parser');
const packageInfo = require('./package.json');
const asSchema = require('./asSchema');

const argv0 = process.argv[1].replace(/.*\//, '');
const opt = require('node-getopt').create([
  ['v', 'verbose', 'Verbose mode: dump JSON of RAML/Schema'],
  ['V', 'version', 'Show version and exit'],
  ['h', 'help', 'Display this help'],
])
  .setHelp(`Usage: node ${argv0} [OPTIONS] <RAMLfile>\n[[OPTIONS]]`)
  .bindHelp()
  .parseSystem();

if (opt.options.version) {
  console.log(`${argv0} version ${packageInfo.version}`);
  process.exit(0);
}

if (opt.argv.length !== 1) {
  console.info(opt.getHelp());
  process.exit(1);
}

let api;
try {
  api = raml.parseSync(opt.argv[0]);
} catch (e) {
  console.error(`${argv0}: RAML parse failed:`, e);
  process.exit(2);
}

if (opt.options.verbose) {
  console.log(`api is a ${api.constructor.name}`); // ASTNodeImpl
  console.log(JSON.stringify(api.toJSON(), null, 2));
}

console.log(asSchema.render(api, opt.options));
